<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
		<!-- AOP설정 -->
		<aop:aspectj-autoproxy/>
		<!-- 사용자 정의 클래스 등록 -->
		<context:component-scan base-package="com.sist.*"></context:component-scan>
		<!-- 
		   @Component, 
		   @Repository, 
		   @Service, 
		   @Controller, 
		   @RestController, 
		   @ControllerAdvice, 
           @Configuration
		
		   클래스 위에 이중에 하나의 어노테이션이 있어야 메모리 할당 가능
		 -->
		 <mvc:annotation-driven>
	      <mvc:message-converters>
		  <bean class="org.springframework.http.converter.StringHttpMessageConverter">
			<property name="supportedMediaTypes">
			<list>
			<value>text/html;charset=UTF-8</value>
			</list>
			</property>
		  </bean>
	      </mvc:message-converters>
         </mvc:annotation-driven>

 
		<!-- 스프링에서 JSP를 찾을 수 있게 등록 (ViewResolver) -->
		<!-- 
		     MVC 동작
		     1. 사용자 요청 => .do
		     2. .do가 서버로 전송
		        DispathcherServlet이 요청을 받는다
		     3. DispathcherServlet에서 HandleMapping호출
		                              =============
		                              | Model클래스를 찾아서
		                                @RequestMapping의 메소드 호출
		     4. request => DispathcherServlet이 받는다
		     5. request를 JSP로 전송 => InternalResourceViewResolver
		                              => 확장자 / 경로명
		     6. JSP에서 (JSTL,EL을 이용해서 전송받은 request를 출력)
		
		
		 -->
		<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".jsp"></bean>

</beans>
